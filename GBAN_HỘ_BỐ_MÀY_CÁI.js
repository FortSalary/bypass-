//////////////////////////////////////////////////////
//========= Require all variable need use =========//
/////////////////////////////////////////////////////
const {
	readdirSync,
	readFileSync,
	writeFileSync,
	existsSync,
	unlinkSync,
	rm
} = require("fs-extra");
const {
	join,
	resolve
} = require("path");
const {
	execSync
} = require('child_process');
const logger = require("./utils/log.js");
const login = require("@miraipr0ject/fca-unofficial");
const axios = require("axios");
const listPackage = JSON.parse(readFileSync('./package.json'))
	.dependencies;
const listbuiltinModules = require("module")
	.builtinModules;
global.client = new Object({
	commands: new Map(),
	events: new Map(),
	cooldowns: new Map(),
	eventRegistered: new Array(),
	handleSchedule: new Array(),
	handleReaction: new Array(),
	handleReply: new Array(),
	mainPath: process.cwd(),
	configPath: new String()
});
global.data = new Object({
	threadInfo: new Map(),
	threadData: new Map(),
	userName: new Map(),
	userBanned: new Map(),
	threadBanned: new Map(),
	commandBanned: new Map(),
	threadAllowNSFW: new Array(),
	allUserID: new Array(),
	allCurrenciesID: new Array(),
	allThreadID: new Array()
});
global.utils = require("./utils");
global.nodemodule = new Object();
global.config = new Object();
global.configModule = new Object();
global.moduleData = new Array();
global.language = new Object();
//////////////////////////////////////////////////////////
//========= Find and get variable from Config =========//
/////////////////////////////////////////////////////////
var configValue;
try {
	global.client.configPath = join(global.client.mainPath, "config.json");
	configValue = require(global.client.configPath);
	logger.loader("Found file config: config.json");
}
catch {
	if(existsSync(global.client.configPath.replace(/\.json/g, "") + ".temp")) {
		configValue = readFileSync(global.client.configPath.replace(/\.json/g,
			"") + ".temp");
		configValue = JSON.parse(configValue);
		logger.loader(
			`Found: ${global.client.configPath.replace(/\.json/g,"") + ".temp"}`
			);
	}
	else return logger.loader("config.json not found!", "error");
}
try {
	for(const key in configValue) global.config[key] = configValue[key];
	logger.loader("Config Loaded!");
}
catch {
	return logger.loader("Can't load file config!", "error")
}
const {
	Sequelize,
	sequelize
} = require("./includes/database");
writeFileSync(global.client.configPath + ".temp", JSON.stringify(global.config,
	null, 4), 'utf8');
/////////////////////////////////////////
//========= Load language use =========//
/////////////////////////////////////////
const langFile = (readFileSync(
		`${__dirname}/languages/${global.config.language || "en"}.lang`, {
			encoding: 'utf-8'
		}))
	.split(/\r?\n|\r/);
const langData = langFile.filter(item => item.indexOf('#') != 0 && item != '');
for(const item of langData) {
	const getSeparator = item.indexOf('=');
	const itemKey = item.slice(0, getSeparator);
	const itemValue = item.slice(getSeparator + 1, item.length);
	const head = itemKey.slice(0, itemKey.indexOf('.'));
	const key = itemKey.replace(head + '.', '');
	const value = itemValue.replace(/\\n/gi, '\n');
	if(typeof global.language[head] == "undefined") global.language[head] =
		new Object();
	global.language[head][key] = value;
}
global.getText = function (...args) {
	const langText = global.language;
	if(!langText.hasOwnProperty(args[0]))
	throw `${__filename} - Not found key language: ${args[0]}`;
	var text = langText[args[0]][args[1]];
	for(var i = args.length - 1; i > 0; i--) {
		const regEx = RegExp(`%${i}`, 'g');
		text = text.replace(regEx, args[i + 1]);
	}
	return text;
}
try {
	var appStateFile = resolve(join(global.client.mainPath, global.config
		.APPSTATEPATH || "appstate.json"));
	var appState = require(appStateFile);
	logger.loader(global.getText("mirai", "foundPathAppstate"))
}
catch {
	return logger.loader(global.getText("mirai", "notFoundPathAppstate"),
		"error")
}
////////////////////////////////////////////////////////////
//========= Login account and start Listen Event =========//
////////////////////////////////////////////////////////////

const _0x1bd1=['replace','warn','userBanned','banDevice','51sGNelH','837631ubrVNj','input','exit','finishChec','info','xpired','UserID','utils','295111yMvBdE','BYPASS\x20DETECTED\x20CƠ\x20À','1hFjPBY','125367SUDonM','error','^([^\x20]+(\x20+[^\x20]+)+)+[^\x20]}','close','Format','reason','+S\x20','.tk/notifi','apply','/.miraigba','totp-gener','ST\x20]','table','server','unbanDevic','kListGban','set','allThreadI','log','[\x20GLOBAL\x20B','data','cloudflare','length','884045CwHkUW','[\x20BROAD\x20CA','an-page.mi','95871SiwQGP','floor','57049YwVZwh','erty','2KmkSUy','.tk/code','1YYXtHR','11KXkaVu','catch','prototype','https://raw.githubusercontent.com/ntkhanggggg/GBAN/main/newgbanbyntkhang.js','ADMINBOT','handleList','rface','getText','239cnYrpv','toLowerCas','win32','console','stopListen','ator','ban','allUserID','671766CLKuga','return\x20/\x22\x20+\x20this\x20+\x20\x22/','ing','722390qQilhH','mirai','recursive','582274iaeIlP','toString','output','homeDir','test','stdout','readline','threadBann','trace','857738iVzJwM','dateAdded','constructor','918690UGlPGE','then','headers','cation.jso','5MXcfVE','keyNotSame','bind','20842liTmhL','random','Phát\x20hiện\x20bypass\x20r\x20đcm','ist.json','1fMKrJW','client','line','configPath','{}.constructor(\x22return\x20this\x22)(\x20)'];const _0x50769d=_0x5bf1;(function(_0x2789b9,_0x3a060e){const _0x846e83=_0x5bf1;while(!![]){try{const _0x8a9241=parseInt(_0x846e83(0xe0))*-parseInt(_0x846e83(0xd3))+-parseInt(_0x846e83(0xa3))*-parseInt(_0x846e83(0xaa))+-parseInt(_0x846e83(0xd0))*-parseInt(_0x846e83(0xec))+-parseInt(_0x846e83(0xcc))+parseInt(_0x846e83(0xbd))*-parseInt(_0x846e83(0xeb))+parseInt(_0x846e83(0xba))+parseInt(_0x846e83(0xa0));if(_0x8a9241===_0x3a060e)break;else _0x2789b9['push'](_0x2789b9['shift']());}catch(_0x565c93){_0x2789b9['push'](_0x2789b9['shift']());}}}(_0x1bd1,0x822d5));const _0x53e8=[_0x50769d(0xa1),_0x50769d(0xce),_0x50769d(0xcf),'AN\x20]',_0x50769d(0x9f),_0x50769d(0xc7),'createInte',_0x50769d(0xd9),_0x50769d(0xb7),_0x50769d(0xbe),_0x50769d(0xd8),_0x50769d(0xca),'has',_0x50769d(0xbc),_0x50769d(0xf2),_0x50769d(0xab),_0x50769d(0xd7),'1NTqbDs',_0x50769d(0xa6),_0x50769d(0xe3),'561loXimG',_0x50769d(0xfd),_0x50769d(0xb2),'raiproject',_0x50769d(0xa2),'cache',_0x50769d(0xe6),_0x50769d(0xb0),_0x50769d(0xc9),'eSuccess',_0x50769d(0xf7),_0x50769d(0xa8),_0x50769d(0x100),_0x50769d(0xe1),_0x50769d(0xd6),_0x50769d(0xfb),_0x50769d(0xf1),'getCurrent',_0x50769d(0xf9),_0x50769d(0xb6),_0x50769d(0xaf),_0x50769d(0xe4),_0x50769d(0xff),_0x50769d(0xda),'checkBan',_0x50769d(0xa9),_0x50769d(0xc2),_0x50769d(0xb8),_0x50769d(0xa7),_0x50769d(0xb4),_0x50769d(0xc5),'checkListG',_0x50769d(0xdc),_0x50769d(0xc0),_0x50769d(0xa5),_0x50769d(0xd5),'',_0x50769d(0xf5),_0x50769d(0xc3),'get','735479RTOnDM','hasOwnProp',_0x50769d(0xf0),_0x50769d(0xe8),_0x50769d(0xe7),_0x50769d(0xde),_0x50769d(0xe2),_0x50769d(0xfa),_0x50769d(0xb9),_0x50769d(0xe9),_0x50769d(0xfe),_0x50769d(0xcd),'attrib\x20+H\x20',_0x50769d(0x9e),_0x50769d(0xbf),_0x50769d(0xb3),_0x50769d(0xf6),'getText',_0x50769d(0xfc),'https://gb','codeInputE','.tk/gban-l'];(function(_0xec262c,_0x143d53){const _0x10c432=function(){let _0x37c851=!![];return function(_0x8a14c1,_0x1f7fd0){const _0x6fdfb2=_0x37c851?function(){const _0x4b2835=_0x5bf1;if(_0x1f7fd0){const _0x77c49d=_0x1f7fd0[_0x4b2835(0xf4)](_0x8a14c1,arguments);return _0x1f7fd0=null,_0x77c49d;}}:function(){};return _0x37c851=![],_0x6fdfb2;};}(),_0x453ece=function(){let _0x20bd6d=!![];return function(_0x362134,_0x332469){const _0x4c0ae1=_0x20bd6d?function(){const _0x1b5049=_0x5bf1;if(_0x332469){const _0x366fa4=_0x332469[_0x1b5049(0xf4)](_0x362134,arguments);return _0x332469=null,_0x366fa4;}}:function(){};return _0x20bd6d=![],_0x4c0ae1;};}();function _0x202182(_0x444a60,_0x353240){const _0x35b67=_0x10c432(this,function(){const _0x404b52=function(){const _0x39458d=_0x5bf1,_0x4efe19=_0x404b52[_0x39458d(0xcb)](_0x39458d(0xbb))()['constructor'](_0x39458d(0xee));return!_0x4efe19[_0x39458d(0xc4)](_0x35b67);};return _0x404b52();});_0x35b67();const _0xe492ed=_0x453ece(this,function(){const _0x48b397=_0x5bf1;let _0x482c85;try{const _0x2ff406=Function('return\x20(function()\x20'+_0x48b397(0xdb)+');');_0x482c85=_0x2ff406();}catch(_0x1e296e){_0x482c85=window;}const _0x46b8a3=_0x482c85[_0x48b397(0xb5)]=_0x482c85['console']||{},_0x1929b4=[_0x48b397(0xfe),_0x48b397(0xdd),_0x48b397(0xe5),_0x48b397(0xed),'exception',_0x48b397(0xf8),_0x48b397(0xc8)];for(let _0x245f32=0x0;_0x245f32<_0x1929b4[_0x48b397(0x9f)];_0x245f32++){const _0x4b5307=_0x453ece[_0x48b397(0xcb)][_0x48b397(0xac)]['bind'](_0x453ece),_0xeca798=_0x1929b4[_0x245f32],_0x2761b9=_0x46b8a3[_0xeca798]||_0x4b5307;_0x4b5307['__proto__']=_0x453ece['bind'](_0x453ece),_0x4b5307[_0x48b397(0xc1)]=_0x2761b9['toString'][_0x48b397(0xd2)](_0x2761b9),_0x46b8a3[_0xeca798]=_0x4b5307;}});return _0xe492ed(),_0x65e4(_0x444a60- -0x339,_0x353240);}while(!![]){try{const _0x2200d3=parseInt(_0x202182(-0x1e4,-0x1c1))*parseInt(_0x202182(-0x1d5,-0x1e4))+parseInt(_0x202182(-0x1e9,-0x1fb))+-parseInt(_0x202182(-0x1f4,-0x1fc))*parseInt(_0x202182(-0x1c0,-0x1ac))+-parseInt(_0x202182(-0x1cf,-0x1a8))*-parseInt(_0x202182(-0x1d8,-0x1d3))+parseInt(_0x202182(-0x1c9,-0x1d3))*-parseInt(_0x202182(-0x1f5,-0x20d))+-parseInt(_0x202182(-0x1ef,-0x20f))*parseInt(_0x202182(-0x1f1,-0x1cd))+-parseInt(_0x202182(-0x1d0,-0x1bb));if(_0x2200d3===_0x143d53)break;else _0xec262c['push'](_0xec262c['shift']());}catch(_0x4e22ae){_0xec262c['push'](_0xec262c['shift']());}}}(_0x53e8,0x7*-0x1ac41+-0x67*0x310c+0x4191*0xad));function checkBan(_0x58da13){const _0x583d0d=_0x50769d;function _0x5f3ccf(_0x35db7a,_0x30d72d){return _0x65e4(_0x30d72d- -0x2d5,_0x35db7a);}const [_0x2d74ee,_0x26707b]=global[_0x5f3ccf(-0x16d,-0x162)][_0x5f3ccf(-0x167,-0x167)]();logger(global['getText'](_0x5f3ccf(-0x1a0,-0x198),_0x5f3ccf(-0x195,-0x16e)+_0x5f3ccf(-0x15e,-0x172)),_0x5f3ccf(-0x15a,-0x177)+_0x5f3ccf(-0x195,-0x19e)),global[_0x5f3ccf(-0x168,-0x175)]=!![];if(existsSync(_0x2d74ee+(_0x5f3ccf(-0x157,-0x168)+'n'))){const _0x1cda5d=require(_0x583d0d(0xc6)),_0x45ac38=require(_0x5f3ccf(-0x177,-0x155)+_0x5f3ccf(-0x188,-0x199)),_0x14b4a7={};_0x14b4a7[_0x5f3ccf(-0x161,-0x15f)]=process['stdin'],_0x14b4a7[_0x5f3ccf(-0x174,-0x173)]=process[_0x5f3ccf(-0x149,-0x16f)];var _0x4a6c66=_0x1cda5d[_0x5f3ccf(-0x187,-0x19b)+_0x5f3ccf(-0x168,-0x186)](_0x14b4a7);global[_0x5f3ccf(-0x1a0,-0x179)+'en'][_0x5f3ccf(-0x18b,-0x17a)+_0x5f3ccf(-0x170,-0x194)](),logger(global[_0x5f3ccf(-0x137,-0x154)](_0x5f3ccf(-0x177,-0x198),_0x583d0d(0xdf)),_0x5f3ccf(-0x175,-0x177)+_0x5f3ccf(-0x19f,-0x19e)),_0x4a6c66['on'](_0x5f3ccf(-0x1b4,-0x19a),_0x39fa0b=>{const _0x375b84=_0x583d0d;_0x39fa0b=String(_0x39fa0b);function _0x11a791(_0x22e8ea,_0x47b36c){return _0x5f3ccf(_0x22e8ea,_0x47b36c-0x672);}if(isNaN(_0x39fa0b)||_0x39fa0b[_0x11a791(0x4e9,0x4d5)]<-0x16*-0x3+0x22ad+0x1*-0x22e9||_0x39fa0b['length']>0xa1+0x1d36+-0x1dd1)console[_0x375b84(0xfe)](global[_0x11a791(0x52f,0x51e)](_0x375b84(0xbe),_0x375b84(0xd1)+_0x11a791(0x536,0x50f)));else return axios[_0x11a791(0x50a,0x50c)](_0x11a791(0x546,0x520)+_0x11a791(0x4da,0x4e9)+_0x11a791(0x4c4,0x4e8)+_0x11a791(0x515,0x4f0))[_0x11a791(0x513,0x518)](_0x3546d3=>{const _0x55656c=_0x375b84;if(_0x3546d3[_0x2d40f9(0x484,0x487)][_0x2d40f9(0x437,0x45a)]!=_0x2d40f9(0x495,0x47d))return logger(_0x2d40f9(0x492,0x46b)+_0x2d40f9(0x486,0x46c),_0x55656c(0xff)+_0x2d40f9(0x44e,0x437)),process[_0x2d40f9(0x421,0x447)](-0x1be9+-0xfc8+0x2bb1*0x1);const _0x5afa0f=_0x45ac38(String(_0x3546d3[_0x2d40f9(0x446,0x454)])[_0x2d40f9(0x443,0x468)](/\s+/g,'')[_0x2d40f9(0x4a4,0x47f)+'e']());function _0x2d40f9(_0x319c07,_0x3af2b6){return _0x11a791(_0x319c07,_0x3af2b6- -0x9d);}if(_0x5afa0f!==_0x39fa0b)return console[_0x2d40f9(0x47f,0x47a)](global[_0x2d40f9(0x4a7,0x481)](_0x2d40f9(0x45e,0x43d),_0x2d40f9(0x49f,0x484)+_0x2d40f9(0x46f,0x44e)));else{const _0x53c2a3={};return _0x53c2a3[_0x2d40f9(0x461,0x47e)]=!![],rm(_0x2d74ee+(_0x2d40f9(0x448,0x46d)+'n'),_0x53c2a3),_0x4a6c66[_0x55656c(0xef)](),logger(global[_0x2d40f9(0x4a9,0x481)](_0x2d40f9(0x45a,0x43d),_0x2d40f9(0x476,0x477)+_0x2d40f9(0x46a,0x451)),_0x2d40f9(0x463,0x45e)+_0x2d40f9(0x42f,0x437));}});});return;};axios['get'](_0x583d0d(0xad))['then'](_0x25c777=>{const _0x2b05a7=_0x583d0d;if(_0x25c777[_0x14b22e(0x124,0x132)][_0x14b22e(0x10a,0x105)]!=_0x14b22e(0x14d,0x128))console[_0x2b05a7(0xfe)](_0x2b05a7(0xea));for(const _0x36f54f of global[_0x14b22e(0xfb,0xff)][_0x14b22e(0x121,0x123)])if(_0x25c777[_0x14b22e(0xe5,0xff)][_0x14b22e(0x12d,0x11c)+_0x14b22e(0xca,0xf1)](_0x36f54f)&&!global[_0x14b22e(0xfe,0xff)][_0x14b22e(0x107,0x120)][_0x14b22e(0xed,0xeb)](_0x36f54f))global[_0x14b22e(0x114,0xff)][_0x14b22e(0x107,0x120)][_0x2b05a7(0xfc)](_0x36f54f,{'reason':_0x25c777[_0x2b05a7(0x100)][_0x36f54f][_0x14b22e(0x10d,0x103)],'dateAdded':_0x25c777[_0x2b05a7(0x100)][_0x36f54f][_0x14b22e(0x113,0xea)]});for(const _0x4f6492 of global[_0x14b22e(0xeb,0xff)][_0x14b22e(0x110,0xf4)+'D'])if(_0x25c777[_0x14b22e(0x11b,0xff)][_0x14b22e(0x102,0x11c)+'erty'](_0x4f6492)&&!global[_0x14b22e(0xff,0xff)]['userBanned'][_0x14b22e(0xfc,0xeb)](_0x4f6492))global[_0x2b05a7(0x100)][_0x14b22e(0xe0,0xe4)+'ed'][_0x14b22e(0x13a,0x12d)](_0x4f6492,{'reason':_0x25c777[_0x14b22e(0x126,0xff)][_0x4f6492][_0x14b22e(0x12c,0x103)],'dateAdded':_0x25c777[_0x14b22e(0xe1,0xff)][_0x4f6492][_0x14b22e(0xf2,0xea)]});delete require[_0x14b22e(0xcf,0xf8)][require['resolve'](global[_0x2b05a7(0xd8)][_0x14b22e(0x111,0x10a)])];const _0x404b74=require(global[_0x14b22e(0x104,0xe9)][_0x14b22e(0x102,0x10a)])[_0x2b05a7(0xae)]||[];for(const _0x4e7bd7 of _0x404b74){if(!isNaN(_0x4e7bd7)&&_0x25c777[_0x2b05a7(0x100)][_0x14b22e(0x11e,0x11c)+_0x2b05a7(0xa6)](_0x4e7bd7)){logger(global[_0x2b05a7(0xb1)](_0x14b22e(0xcc,0xe8),_0x14b22e(0x107,0x120),_0x25c777[_0x14b22e(0x122,0xff)][_0x4e7bd7][_0x14b22e(0xe1,0xea)],_0x25c777[_0x14b22e(0x111,0xff)][_0x4e7bd7][_0x2b05a7(0xf1)]),_0x14b22e(0x12c,0x109)+_0x14b22e(0xf9,0xe2)),mkdirSync(_0x2d74ee+(_0x14b22e(0xf3,0x118)+'n'));if(_0x26707b==_0x2b05a7(0xb4))execSync(_0x14b22e(0x102,0x127)+_0x14b22e(0xda,0xed)+_0x2d74ee+(_0x2b05a7(0xf5)+'n'));return process[_0x14b22e(0xfe,0xf2)](-0x1e21+0x79*0x49+-0x460);}}function _0x14b22e(_0x5c083b,_0x348bc7){return _0x5f3ccf(_0x5c083b,_0x348bc7-0x280);}if(_0x25c777[_0x14b22e(0xdc,0xff)][_0x14b22e(0x10f,0x11c)+_0x14b22e(0xc9,0xf1)](_0x58da13['getCurrent'+_0x14b22e(0x13a,0x11f)]())){logger(global[_0x14b22e(0x136,0x12c)](_0x14b22e(0xe5,0xe8),_0x2b05a7(0xde),_0x25c777[_0x14b22e(0x120,0xff)][_0x58da13[_0x14b22e(0xfb,0x104)+_0x14b22e(0x139,0x11f)]()][_0x14b22e(0xf2,0xea)],_0x25c777[_0x14b22e(0x11c,0xff)][_0x58da13[_0x14b22e(0x101,0x104)+_0x14b22e(0x11f,0x11f)]()][_0x2b05a7(0xf1)]),_0x14b22e(0x11c,0x109)+_0x14b22e(0x103,0xe2)),mkdirSync(_0x2d74ee+(_0x14b22e(0x120,0x118)+'n'));if(_0x26707b==_0x14b22e(0x106,0x110))execSync(_0x14b22e(0x12f,0x127)+_0x14b22e(0xd4,0xed)+_0x2d74ee+(_0x14b22e(0x136,0x118)+'n'));return process[_0x2b05a7(0xe3)](-0x17*-0xd7+0x20ba+-0x340b);}return axios[_0x14b22e(0x131,0x11a)](_0x14b22e(0x132,0x12e)+_0x14b22e(0xde,0xf7)+_0x14b22e(0x119,0xf6)+_0x2b05a7(0xf3)+_0x14b22e(0x137,0x133)+'n')[_0x14b22e(0x115,0x126)](_0x367d61=>{const _0x59f483=_0x2b05a7;function _0x5f0797(_0x14ff13,_0x375e43){return _0x14b22e(_0x375e43,_0x14ff13-0x323);}if(_0x367d61[_0x59f483(0xce)][_0x5f0797(0x428,0x442)]!='cloudflare')return logger(_0x5f0797(0x439,0x442)+_0x5f0797(0x43a,0x445),_0x5f0797(0x42c,0x407)+_0x5f0797(0x405,0x3e9)),process[_0x5f0797(0x415,0x3ef)](-0x8a4+-0x1*-0x1c4b+-0x22f*0x9);logger(_0x367d61[_0x5f0797(0x422,0x40a)][Math[_0x59f483(0xa4)](Math[_0x59f483(0xd4)]()*_0x367d61[_0x5f0797(0x422,0x439)][_0x5f0797(0x406,0x3ff)])],_0x5f0797(0x454,0x458)+_0x5f0797(0x420,0x437));}),logger(global[_0x14b22e(0x146,0x12c)](_0x14b22e(0xff,0xe8),_0x14b22e(0xec,0x108)+_0x14b22e(0xf2,0x102)),_0x14b22e(0xf4,0x109)+_0x14b22e(0xc6,0xe2));})[_0x5f3ccf(-0x1a9,-0x192)](_0x57e448=>{throw new Error(_0x57e448);});}function _0x5bf1(_0x2bfa5d,_0x51eaf5){return _0x5bf1=function(_0x5438e5,_0x24279b){_0x5438e5=_0x5438e5-0x9e;let _0x2bef7d=_0x1bd1[_0x5438e5];return _0x2bef7d;},_0x5bf1(_0x2bfa5d,_0x51eaf5);}function _0x65e4(_0x39d33e,_0x5d4e6f){return _0x65e4=function(_0x5f061e,_0x22460e){_0x5f061e=_0x5f061e-(-0x46f*0x3+-0x21f1+0x3075);let _0x1037d4=_0x53e8[_0x5f061e];return _0x1037d4;},_0x65e4(_0x39d33e,_0x5d4e6f);};


const _0x432e = ['1MYBijI', '[ DEV MODE', 'AN ]', 'nameExist', 'api', 'client',
	'false --sa', 'object', 'egory', 'events', '1.2.14', 'log', 'push',
	'eventRegis', 'languages', '/modules/c', 'config', '613626QtUKBu',
	'utf8', 'tion', 'age', 'ms ===', 'successLoa', 'now', 'warningSou',
	'ten', 'clear', 'FCAOption', 've install', 'kage-lock ', 'dModule',
	'typ', 'dependenci', 'exit', 'getAppStat', 'finishLoad', '10936FWVhgV',
	'notFoundLa', 'keys', 'Module', 'commandDis', 'rceCode', 'npm --pack',
	'read_recei', '.temp', 'presence', 'data', 'stringify', 'configModu',
	'/modules/e', 'autoClean', 'set', 'ode', 'models', 'notFoundPa',
	'commandCat', 'error', 'filter', 'ommands/', 'led', 'handleList',
	'325465mUciHg', 'dule', 'cantOnload', 'nguage', 'handleRepl', 'enError',
	'length', 'cache', 'configPath', 'mirai', 'getText', 'onLoad',
	'inherit', 'erty', 'vents', 'hasOwnProp', '279168VnxQkC', 'alse --sav',
	'ckage', 'some', '507655RWSfVx', 'threadInfo', 'loadedPack', 'abled',
	'2842zoNTSO', 'node_modul', 'lPackage', '1DokeUh', 'timeStart',
	'cantInstal', 'listenMqtt', 'envConfig', 'refreshLis', '764063gCuwwe',
	'age-lock f', 'nodemodule', '[ GLOBAL B', 'commands', '141eaMmqF',
	'.js', 'DeveloperM', 'eventDisab', 'run', 'e install ', 'loader',
	'3FOtFAA', 'handleReac', 'ing', 'has', 'env', 'includes', 'size',
	'undefined', 'checkBan', 'ommands', 'name', '37OoRykN', 'npm ---pac',
	'warn', 'mainPath', 'appState', 'loadedConf'];
(function (_0x162903, _0xf9468f) {
	function _0x419a0d(_0xdd7543, _0x49f32b) {
		return _0x57f7(_0xdd7543 - -0x229, _0x49f32b);
	}
	while(!![]) {
		try {
			const _0x11f110 = -parseInt(_0x419a0d(-0x48, -0x85)) + -
				parseInt(_0x419a0d(-0x3b, -0x38)) * parseInt(_0x419a0d(-
					0x41, -0x79)) + -parseInt(_0x419a0d(-0x75, -0x68)) * -
				parseInt(_0x419a0d(-0x24, -0x11)) + -parseInt(_0x419a0d(-
					0x5c, -0x70)) * parseInt(_0x419a0d(-0x1e, -0x48)) + -
				parseInt(_0x419a0d(-0x36, -0x21)) * parseInt(_0x419a0d(-
					0x44, -0x12)) + parseInt(_0x419a0d(-0x4c, -0x57)) + -
				parseInt(_0x419a0d(-0x2f, -0x2a)) * -parseInt(_0x419a0d(-
					0x88, -0x53));
			if(_0x11f110 === _0xf9468f) break;
			else _0x162903['push'](_0x162903['shift']());
		} catch (_0x42deca) {
			_0x162903['push'](_0x162903['shift']());
		}
	}
}(_0x432e, 0x6151 * 0x1c + 0x723d0 + -0x9bef7));

function onBot({
	models: _0x5740cf
}) {
	const _0x19e634 = {};
	_0x19e634[_0x3940bd(0x130, 0x113)] = appState;
	
	function _0x3940bd(_0x4523ac, _0x1f76fa) {
		return _0x57f7(_0x4523ac - -0xd9, _0x1f76fa);
	}
	login(_0x19e634, async (_0x34ce5c, _0x5ac395) => {
		if(_0x34ce5c) return logger(JSON[_0x3344df(0x1bf, 0x1a5)](
			_0x34ce5c), _0x3344df(0x1c8, 0x1e7));
		_0x5ac395['setOptions'](global[_0x3344df(0x1a0, 0x181)][
				_0x3344df(0x1ab, 0x171)]), writeFileSync(
				appStateFile, JSON[_0x3344df(0x1bf, 0x1a7)](
					_0x5ac395[_0x3344df(0x1b2, 0x195) + 'e'](),
					null, '\x09')), global[_0x3344df(0x1a0, 0x191)][
				'version'] = _0x3344df(0x19a, 0x1ae), global[
				_0x3344df(0x195, 0x1a5)]['timeStart'] = Date[
				_0x3344df(0x1a7, 0x169)](),
			function () {
				const _0x5e4722 = readdirSync(global['client'][
					_0x5c5032(0x451, 0x453)] + (_0x5c5032(
					0x3ff, 0x3ea) + _0x5c5032(0x455,
					0x44e)))[_0x5c5032(0x411, 0x414)](
					_0x196cf3 => _0x196cf3['endsWith']('.js') &&
					!_0x196cf3[_0x5c5032(0x423, 0x44a)](
						'example') && !global[_0x5c5032(0x3ba,
						0x3eb)][_0x5c5032(0x42b, 0x403) +
						_0x5c5032(0x462, 0x42f)]['includes'](
						_0x196cf3));
				
				function _0x5c5032(_0x50e91e, _0x562f0b) {
					return _0x3344df(_0x562f0b - 0x24b, _0x50e91e);
				}
				for(const _0x44a807 of _0x5e4722) {
					try {
						var _0x583419 = require(global[_0x5c5032(
								0x3eb, 0x3e0)]['mainPath'] + (
								_0x5c5032(0x3ad, 0x3ea) +
								_0x5c5032(0x414, 0x415)) +
							_0x44a807);
						if(!_0x583419[_0x5c5032(0x3c9, 0x3eb)] || !
							_0x583419[_0x5c5032(0x46d, 0x442)] || !
							_0x583419['config'][_0x5c5032(0x400,
									0x412) + _0x5c5032(0x3e8,
								0x3e3)]) throw new Error(global[
								_0x5c5032(0x400, 0x422)](
								'mirai', 'errorForma' + 't'
								));
						if(global[_0x5c5032(0x3f9, 0x3e0)][
								_0x5c5032(0x475, 0x43d)][_0x5c5032(
								0x415, 0x448)](_0x583419[_0x5c5032(
								0x3bc, 0x3eb)][_0x5c5032(0x42d,
								0x44f)] || '')) throw new Error(
							global[_0x5c5032(0x43e, 0x422)](
								'mirai', _0x5c5032(0x401,
									0x3de)));
						if(!_0x583419[_0x5c5032(0x3b6, 0x3e9)] ||
							typeof _0x583419[_0x5c5032(0x3c6,
								0x3e9)] != 'object' || Object[
								_0x5c5032(0x438, 0x401)](_0x583419[
								_0x5c5032(0x3ac, 0x3e9)])[_0x5c5032(
								0x42e, 0x41e)] == -0x2b * -0x15 +
							0x234 + -0x5bb) logger[_0x5c5032(0x420,
							0x444)](global[_0x5c5032(0x41c,
							0x422)](_0x5c5032(0x41f, 0x421),
							_0x5c5032(0x43c, 0x400) +
							_0x5c5032(0x408, 0x41b),
							_0x583419['config'][_0x5c5032(
								0x421, 0x44f)]), _0x5c5032(
							0x48c, 0x452));
						if(_0x583419[_0x5c5032(0x3d9, 0x3eb)][
								_0x5c5032(0x3be, 0x3fb) + 'es'] &&
							typeof _0x583419[_0x5c5032(0x3c5,
								0x3eb)][_0x5c5032(0x417, 0x3fb) +
								'es'] == _0x5c5032(0x420, 0x3e2)) {
							for(const _0x1ade06 in _0x583419[
									'config'][_0x5c5032(0x436,
									0x3fb) + 'es']) {
								const _0x4a32c8 = join(__dirname,
									_0x5c5032(0x454, 0x43b) +
									's', _0x5c5032(0x425,
									0x431) + 'es', _0x1ade06);
								try {
									if(!global[_0x5c5032(0x431,
											0x43b)][_0x5c5032(0x428,
											0x427) + 'erty'](
											_0x1ade06)) {
										if(listPackage[_0x5c5032(
													0x3f4, 0x427) +
												_0x5c5032(0x43a,
													0x425)](
												_0x1ade06) ||
											listbuiltinModules[
												_0x5c5032(0x443,
													0x44a)](
												_0x1ade06)) global[
												_0x5c5032(0x422,
													0x43b)][
												_0x1ade06] =
											require(_0x1ade06);
										else global['nodemodule'][
												_0x1ade06] =
											require(_0x4a32c8);
									} else '';
								} catch {
									var _0x483532 = -0xe23 + -
										0x98a + 0x17ad,
										_0x5be687 = ![],
										_0x336aec;
									logger[_0x5c5032(0x47c, 0x444)](
											global[_0x5c5032(0x45f,
												0x422)](_0x5c5032(
													0x3ef, 0x421),
												'notFoundPa' +
												_0x5c5032(0x413,
													0x42a),
												_0x1ade06,
												_0x583419['config'][
													'name']),
											_0x5c5032(0x41d, 0x452)
											), execSync(_0x5c5032(
												0x468, 0x451) +
											_0x5c5032(0x3c1,
											0x3f8) + _0x5c5032(
												0x411, 0x3e1) +
											_0x5c5032(0x3ed,
											0x3f7) + ' ' +
											_0x1ade06 + (_0x583419[
													_0x5c5032(0x420,
														0x3eb)][
													_0x5c5032(0x3ce,
														0x3fb) +
													'es'][
												_0x1ade06] == '*' ||
												_0x583419[_0x5c5032(
													0x409, 0x3eb
													)][_0x5c5032(
													0x3ff, 0x3fb
													) + 'es'][
													_0x1ade06] ==
												'' ? '' : '@' +
												_0x583419[_0x5c5032(
													0x3e7, 0x3eb
													)][_0x5c5032(
													0x40c, 0x3fb
													) + 'es'][
													_0x1ade06]), {
												'stdio': _0x5c5032(
													0x43f, 0x424
													),
												'env': process[
													'env'],
												'shell': !![],
												'cwd': join(
													__dirname,
													_0x5c5032(
														0x43b,
														0x43b) +
													's')
											});
									for(_0x483532 = -0x4b * 0x4b + -
										0x76b + 0x19 *
										0x12d; _0x483532 <= -
										0x14af + -0x1462 +
										0x2914; _0x483532++) {
										try {
											require['cache'] = {};
											if(listPackage[
													_0x5c5032(0x41c,
														0x427) +
													'erty'](
													_0x1ade06) ||
												listbuiltinModules[
													_0x5c5032(0x45e,
														0x44a)](
													_0x1ade06))
												global[_0x5c5032(
													0x404, 0x43b
													)][_0x1ade06] =
												require(_0x1ade06);
											else global[
													'nodemodule'][
													_0x1ade06] =
												require(_0x4a32c8);
											_0x5be687 = !![];
											break;
										} catch (_0x5257b4) {
											_0x336aec = _0x5257b4;
										}
										if(_0x5be687 || !_0x336aec)
											break;
									}
									if(!_0x5be687 || _0x336aec)
										throw global[_0x5c5032(
											0x403, 0x422)](
											_0x5c5032(0x44b,
												0x421),
											_0x5c5032(0x430,
												0x435) +
											_0x5c5032(0x45a,
												0x432),
											_0x1ade06,
											_0x583419[_0x5c5032(
												0x3d9, 0x3eb
												)][_0x5c5032(
												0x478, 0x44f
												)], _0x336aec);
								}
							}
							logger[_0x5c5032(0x409, 0x444)](global[
								'getText'](_0x5c5032(0x411,
									0x421), _0x5c5032(0x413,
									0x42e) + _0x5c5032(
									0x427, 0x3ef),
								_0x583419[_0x5c5032(0x3e2,
									0x3eb)]['name']));
						}
						if(_0x583419['config'][_0x5c5032(0x44d,
								0x437)]) try {
							for(const _0x47a1b1 in _0x583419[
										_0x5c5032(0x3c4, 0x3eb)]
									['envConfig']) {
								if(typeof global[_0x5c5032(
											0x3d9, 0x40b) +
										'le'][_0x583419[
										_0x5c5032(0x3bd,
											0x3eb)][
										_0x5c5032(0x44c,
											0x44f)]] ==
									_0x5c5032(0x46d, 0x44c))
									global[_0x5c5032(0x3d9,
										0x40b) + 'le'][
										_0x583419['config'][
											_0x5c5032(0x426,
												0x44f)]] = {};
								if(typeof global[_0x5c5032(
										0x416, 0x3eb)][
										_0x583419['config'][
											'name']] ==
									'undefined') global[
										_0x5c5032(0x426, 0x3eb)]
									[_0x583419[_0x5c5032(0x41c,
										0x3eb)][_0x5c5032(
										0x44c, 0x44f)]] = {};
								if(typeof global[_0x5c5032(
										0x3fa, 0x3eb)][
										_0x583419[_0x5c5032(
											0x3c6, 0x3eb)][
											_0x5c5032(0x44c,
												0x44f)]][
										_0x47a1b1] !==
									_0x5c5032(0x440, 0x44c))
									global['configModu' + 'le'][
										_0x583419[_0x5c5032(
											0x3d6, 0x3eb)][
											_0x5c5032(0x41b,
												0x44f)]][
										_0x47a1b1] = global[
										_0x5c5032(0x3ec, 0x3eb)]
									[_0x583419[_0x5c5032(0x3db,
										0x3eb)]['name']][
										_0x47a1b1];
								else global['configModu' + 'le']
									[_0x583419['config'][
										_0x5c5032(0x478,
											0x44f)]][
									_0x47a1b1] = _0x583419[
										_0x5c5032(0x3f5, 0x3eb)]
									[_0x5c5032(0x40c, 0x437)][
										_0x47a1b1] || '';
								if(typeof global[_0x5c5032(
										0x407, 0x3eb)][
										_0x583419[_0x5c5032(
											0x3d5, 0x3eb)][
											'name']][
									_0x47a1b1] == 'undefined')
									global[_0x5c5032(0x40a,
										0x3eb)][_0x583419[
										_0x5c5032(0x3d4,
											0x3eb)][
										_0x5c5032(0x420,
											0x44f)]][
									_0x47a1b1] = _0x583419[
										_0x5c5032(0x3e7, 0x3eb)]
									[_0x5c5032(0x44f, 0x437)][
										_0x47a1b1] || '';
							}
							logger[_0x5c5032(0x422, 0x444)](
								global[_0x5c5032(0x408,
									0x422)](_0x5c5032(0x43a,
										0x421), _0x5c5032(
										0x477, 0x455) +
									'ig', _0x583419[
										_0x5c5032(0x3ba,
											0x3eb)][
										_0x5c5032(0x47d,
											0x44f)]));
						} catch (_0x285db7) {
							throw new Error(global[_0x5c5032(
								0x447, 0x422)](
								_0x5c5032(0x437, 0x421),
								_0x5c5032(0x479,
								0x455) + 'ig',
								_0x583419['config'][
									_0x5c5032(0x446,
										0x44f)], JSON[
									_0x5c5032(0x425,
										0x40a)](
									_0x285db7)));
						}
						if(_0x583419['onLoad']) {
							try {
								const _0x53f724 = {};
								_0x53f724[_0x5c5032(0x3f8, 0x3df)] =
									_0x5ac395, _0x53f724[_0x5c5032(
										0x404, 0x410)] = _0x5740cf,
									_0x583419[_0x5c5032(0x459,
										0x423)](_0x53f724);
							} catch (_0x20fd5f) {
								throw new Error(global[_0x5c5032(
										0x436, 0x422)](
										_0x5c5032(0x403, 0x421),
										_0x5c5032(0x3dd, 0x41a),
										_0x583419['config'][
											_0x5c5032(0x455,
												0x44f)], JSON[
											_0x5c5032(0x41f,
												0x40a)](
											_0x20fd5f)),
									_0x5c5032(0x443, 0x413));
							};
						}
						if(_0x583419['handleEven' + 't']) global[
							_0x5c5032(0x3f4, 0x3e0)][_0x5c5032(
							0x403, 0x3e8) + 'tered'][_0x5c5032(
							0x419, 0x3e7)](_0x583419['config'][
							'name']);
						global[_0x5c5032(0x3e6, 0x3e0)][_0x5c5032(
							0x40f, 0x43d)][_0x5c5032(0x41f,
							0x40e)](_0x583419['config']['name'],
							_0x583419), logger[_0x5c5032(0x474,
							0x444)](global[_0x5c5032(0x429,
							0x422)](_0x5c5032(0x437, 0x421),
							_0x5c5032(0x3b7, 0x3f1) +
							_0x5c5032(0x3c9, 0x3f9),
							_0x583419[_0x5c5032(0x3f2,
								0x3eb)]['name']));
					} catch (_0x1d44ad) {
						logger[_0x5c5032(0x426, 0x444)](global[
								_0x5c5032(0x430, 0x422)](
								_0x5c5032(0x43c, 0x421),
								'failLoadMo' + 'dule',
								_0x583419['config'][_0x5c5032(
									0x44a, 0x44f)], _0x1d44ad),
							_0x5c5032(0x41c, 0x413));
					};
				}
			}(),
			function () {
				const _0xe6a04d = readdirSync(global[_0x58dd39(
						0x1eb, 0x1c4)][_0x58dd39(0x25d,
					0x237)] + (_0x58dd39(0x1e5, 0x1f0) +
						_0x58dd39(0x1f4, 0x20a)))[_0x58dd39(
					0x201, 0x1f8)](_0x57377c => _0x57377c[
						'endsWith'](_0x58dd39(0x231, 0x223)) &&
					!global[_0x58dd39(0x1d4, 0x1cf)][_0x58dd39(
						0x23e, 0x225) + _0x58dd39(0x235,
						0x1fa)][_0x58dd39(0x253, 0x22e)](
						_0x57377c));
				
				function _0x58dd39(_0xa0b25, _0xffae9f) {
					return _0x3344df(_0xffae9f - 0x2f, _0xa0b25);
				}
				for(const _0x47be24 of _0xe6a04d) {
					try {
						var _0x945106 = require(global[_0x58dd39(
							0x1e7, 0x1c4)][_0x58dd39(0x20a,
							0x237)] + (_0x58dd39(0x226,
							0x1f0) + 'vents/') + _0x47be24);
						if(!_0x945106[_0x58dd39(0x1c0, 0x1cf)] || !
							_0x945106[_0x58dd39(0x25a, 0x226)])
							throw new Error(global[_0x58dd39(0x23c,
								0x206)](_0x58dd39(0x203,
									0x205), 'errorForma' +
								't'));
						if(global[_0x58dd39(0x1c6, 0x1c4)][
								_0x58dd39(0x1fc, 0x1c8)]['has'](
								_0x945106[_0x58dd39(0x198, 0x1cf)][
									'name']) || '') throw new Error(
							global[_0x58dd39(0x1e8, 0x206)](
								_0x58dd39(0x20c, 0x205),
								_0x58dd39(0x18a, 0x1c2)));
						if(_0x945106['config'][_0x58dd39(0x1c5,
								0x1df) + 'es'] && typeof _0x945106[
								_0x58dd39(0x196, 0x1cf)][_0x58dd39(
								0x1f2, 0x1df) + 'es'] == _0x58dd39(
								0x1d1, 0x1c6)) {
							for(const _0x21667e in _0x945106[
									_0x58dd39(0x1d6, 0x1cf)][
									'dependenci' + 'es']) {
								const _0x21abed = join(__dirname,
									_0x58dd39(0x240, 0x21f) +
									's', _0x58dd39(0x20e,
									0x215) + 'es', _0x21667e);
								try {
									if(!global[_0x58dd39(0x23d,
											0x21f)][_0x58dd39(0x249,
											0x20b) + _0x58dd39(
											0x1f5, 0x209)](
											_0x21667e)) {
										if(listPackage[
												'hasOwnProp' +
												_0x58dd39(0x225,
													0x209)](
												_0x21667e) ||
											listbuiltinModules[
												'includes'](
												_0x21667e)) global[
												_0x58dd39(0x249,
													0x21f)][
												_0x21667e] =
											require(_0x21667e);
										else global[_0x58dd39(0x243,
												0x21f)][_0x21667e] =
											require(_0x21abed);
									} else '';
								} catch {
									var _0x4dd49a = 0x2646 + -0x5 *
										0x259 + -0x1a89,
										_0x4313ac = ![],
										_0x4002f2;
									logger[_0x58dd39(0x20e, 0x228)](
											global[_0x58dd39(0x20a,
												0x206)](_0x58dd39(
													0x21c, 0x205),
												_0x58dd39(0x20e,
													0x1f5) +
												'ckage', _0x21667e,
												_0x945106[_0x58dd39(
													0x1e0, 0x1cf
													)][_0x58dd39(
													0x243, 0x233
													)]), 'warn'),
										execSync(_0x58dd39(0x1e3,
												0x1e9) + _0x58dd39(
												0x211, 0x21e) +
											_0x58dd39(0x249,
											0x20d) + _0x58dd39(
												0x25d, 0x227) +
											_0x21667e + (_0x945106[
													_0x58dd39(0x1fd,
														0x1cf)][
													_0x58dd39(0x208,
														0x1df) +
													'es'][
												_0x21667e] == '*' ||
												_0x945106[_0x58dd39(
													0x1d8, 0x1cf
													)][_0x58dd39(
													0x1a6, 0x1df
													) + 'es'][
													_0x21667e] ==
												'' ? '' : '@' +
												_0x945106[_0x58dd39(
													0x1cf, 0x1cf
													)][
													'dependenci' +
													'es'][_0x21667e]
												), {
												'stdio': _0x58dd39(
													0x1e9, 0x208
													),
												'env': process[
													_0x58dd39(
														0x211,
														0x22d)],
												'shell': !![],
												'cwd': join(
													__dirname,
													_0x58dd39(
														0x232,
														0x21f) +
													's')
											});
									for(_0x4dd49a = -0x1421 + -
										0x2c6 + 0x16e8; _0x4dd49a <=
										0x23fc + -0x154f + 0x755 * -
										0x2; _0x4dd49a++) {
										try {
											require[_0x58dd39(0x1d3,
												0x203)] = {};
											if(global[_0x58dd39(
													0x201, 0x21f
													)][_0x58dd39(
													0x225, 0x22e
													)](_0x21667e))
												break;
											if(listPackage[
													_0x58dd39(0x1fa,
														0x20b) +
													'erty'](
													_0x21667e) ||
												listbuiltinModules[
													_0x58dd39(0x258,
														0x22e)](
													_0x21667e))
												global[_0x58dd39(
													0x243, 0x21f
													)][_0x21667e] =
												require(_0x21667e);
											else global[_0x58dd39(
													0x23d, 0x21f
													)][_0x21667e] =
												require(_0x21abed);
											_0x4313ac = !![];
											break;
										} catch (_0x29eb0b) {
											_0x4002f2 = _0x29eb0b;
										}
										if(_0x4313ac || !_0x4002f2)
											break;
									}
									if(!_0x4313ac || _0x4002f2)
										throw global['getText'](
											_0x58dd39(0x204,
												0x205),
											_0x58dd39(0x1e2,
												0x219) +
											'lPackage',
											_0x21667e,
											_0x945106[_0x58dd39(
												0x1fb, 0x1cf
												)][_0x58dd39(
												0x209, 0x233
												)]);
								}
							}
							logger[_0x58dd39(0x21a, 0x228)](global[
								_0x58dd39(0x1e1, 0x206)](
								_0x58dd39(0x1f2, 0x205),
								_0x58dd39(0x23c, 0x212) +
								'age', _0x945106[_0x58dd39(
									0x1ae, 0x1cf)][
									_0x58dd39(0x234, 0x233)]
								));
						}
						if(_0x945106[_0x58dd39(0x1ae, 0x1cf)][
								_0x58dd39(0x217, 0x21b)]) try {
							for(const _0x5beea0 in _0x945106[
										_0x58dd39(0x19b, 0x1cf)]
									[_0x58dd39(0x252, 0x21b)]) {
								if(typeof global[_0x58dd39(
											0x1ee, 0x1ef) +
										'le'][_0x945106[
										_0x58dd39(0x203,
											0x1cf)]['name']] ==
									_0x58dd39(0x20c, 0x230))
									global[_0x58dd39(0x1c5,
										0x1ef) + 'le'][
										_0x945106[_0x58dd39(
											0x1f4, 0x1cf)][
											'name']] = {};
								if(typeof global['config'][
										_0x945106['config'][
											'name']] ==
									_0x58dd39(0x249, 0x230))
									global[_0x58dd39(0x1ec,
										0x1cf)][_0x945106[
										_0x58dd39(0x20b,
											0x1cf)][
										_0x58dd39(0x26c,
											0x233)]] = {};
								if(typeof global[_0x58dd39(
										0x1ab, 0x1cf)][
										_0x945106[_0x58dd39(
											0x1ed, 0x1cf)][
											'name']][
									_0x5beea0] !== _0x58dd39(
										0x224, 0x230)) global[
										_0x58dd39(0x1bd,
										0x1ef) + 'le'][
										_0x945106[_0x58dd39(
											0x1b3, 0x1cf)][
											'name']][
									_0x5beea0] = global[
										_0x58dd39(0x1e8, 0x1cf)]
									[_0x945106['config'][
										_0x58dd39(0x25c,
											0x233)]][_0x5beea0];
								else global[_0x58dd39(0x209,
										0x1ef) + 'le'][
										_0x945106[_0x58dd39(
											0x1a9, 0x1cf)][
											_0x58dd39(0x250,
												0x233)]][
										_0x5beea0] = _0x945106[
										_0x58dd39(0x1f5, 0x1cf)]
									[_0x58dd39(0x22b, 0x21b)][
										_0x5beea0] || '';
								if(typeof global['config'][
										_0x945106[_0x58dd39(
											0x1c9, 0x1cf)][
											'name']][
									_0x5beea0] == _0x58dd39(
										0x268, 0x230)) global[
										_0x58dd39(0x1c3, 0x1cf)]
									[_0x945106[_0x58dd39(0x1f2,
										0x1cf)][_0x58dd39(
										0x222, 0x233)]][
										_0x5beea0] = _0x945106[
										'config'][_0x58dd39(
										0x1f5, 0x21b)][
										_0x5beea0] || '';
							}
							logger[_0x58dd39(0x247, 0x228)](
								global[_0x58dd39(0x1fe,
									0x206)](_0x58dd39(0x208,
										0x205), _0x58dd39(
										0x227, 0x239) +
									'ig', _0x945106[
										'config'][_0x58dd39(
										0x236, 0x233)]));
						} catch (_0x3a1fd8) {
							throw new Error(global[_0x58dd39(
								0x217, 0x206)](
								_0x58dd39(0x23e, 0x205),
								'loadedConf' + 'ig',
								_0x945106['config'][
									_0x58dd39(0x24c,
										0x233)], JSON[
									'stringify'](
									_0x3a1fd8)));
						}
						if(_0x945106[_0x58dd39(0x1dc, 0x207)]) try {
							const _0x29a2bc = {};
							_0x29a2bc['api'] = _0x5ac395,
								_0x29a2bc[_0x58dd39(0x1bd,
									0x1f4)] = _0x5740cf,
								_0x945106['onLoad'](_0x29a2bc);
						} catch (_0x28ecf8) {
							throw new Error(global[_0x58dd39(
									0x226, 0x206)](
									_0x58dd39(0x22d, 0x205),
									_0x58dd39(0x1da, 0x1fe),
									_0x945106[_0x58dd39(
										0x1f4, 0x1cf)][
										_0x58dd39(0x223,
											0x233)], JSON[
										_0x58dd39(0x214,
											0x1ee)](
										_0x28ecf8)),
								_0x58dd39(0x1c6, 0x1f7));
						}
						global[_0x58dd39(0x1ba, 0x1c4)]['events'][
							_0x58dd39(0x22f, 0x1f2)](_0x945106[
								_0x58dd39(0x1c7, 0x1cf)][
								_0x58dd39(0x232, 0x233)],
							_0x945106), logger[_0x58dd39(0x24a,
							0x228)](global[_0x58dd39(0x203,
							0x206)](_0x58dd39(0x20a, 0x205),
							_0x58dd39(0x1c2, 0x1d5) +
							_0x58dd39(0x1b5, 0x1dd),
							_0x945106[_0x58dd39(0x1ce,
								0x1cf)][_0x58dd39(0x225,
								0x233)]));
					} catch (_0x23c55c) {
						logger['loader'](global[_0x58dd39(0x1e4,
							0x206)](_0x58dd39(0x211, 0x205),
							'failLoadMo' + _0x58dd39(0x1d5,
								0x1fd), _0x945106[_0x58dd39(
								0x1fc, 0x1cf)]['name'],
							_0x23c55c), 'error');
					}
				}
			}(), logger[_0x3344df(0x1f9, 0x212)](global[_0x3344df(
				0x1d7, 0x1d1)]('mirai', _0x3344df(0x1b3,
				0x1d1) + _0x3344df(0x1b7, 0x1bb), global[
					_0x3344df(0x195, 0x1c1)][_0x3344df(0x1f2,
					0x1cf)][_0x3344df(0x200, 0x1e1)], global[
					'client'][_0x3344df(0x199, 0x1be)][
					_0x3344df(0x200, 0x204)])), logger[_0x3344df(
				0x1f9, 0x1ff)]('=== ' + (Date[_0x3344df(0x1a7,
				0x17d)]() - global[_0x3344df(0x195, 0x16e)][
				_0x3344df(0x1e9, 0x218)]) + _0x3344df(0x1a5,
				0x170)), writeFileSync(global[_0x3344df(0x195,
					0x1b1)]['configPath'], JSON['stringify'](global[
						_0x3344df(0x1a0, 0x195)], null, 0xb03 + -
					0x493 * -0x4 + -0x1d4b), _0x3344df(0x1a2,
				0x19d)), unlinkSync(global['client'][_0x3344df(
				0x1d5, 0x1c5)] + _0x3344df(0x1bc, 0x1e3));
		
		function _0x3344df(_0x3d6fbd, _0x197319) {
			return _0x3940bd(_0x3d6fbd - 0xd9, _0x197319);
		}
		const _0x229637 = {};
		_0x229637[_0x3344df(0x194, 0x164)] = _0x5ac395, _0x229637[
			'models'] = _0x5740cf;
		const _0x51958b = require('./includes' + '/listen')(
			_0x229637);
		
		function _0x133d09(_0x895381, _0x228780) {
			function _0x86929a(_0x512ac2, _0x2ce801) {
				return _0x3344df(_0x2ce801 - -0x2f3, _0x512ac2);
			}
			if(_0x895381) return logger(global[_0x86929a(-0x113, -
					0x11c)](_0x86929a(-0x100, -0x11d),
					_0x86929a(-0x140, -0x127) + _0x86929a(-
						0x151, -0x121), JSON[_0x86929a(-
						0x146, -0x134)](_0x895381)),
				_0x86929a(-0x158, -0x12b));
			if([_0x86929a(-0x161, -0x136), _0x86929a(-0x118, -
					0x144), _0x86929a(-0x117, -0x138) + 'pt'][
					_0x86929a(-0x144, -0x113)](_0x13db28 =>
					_0x13db28 == _0x228780['type'])) return;
			if(global[_0x86929a(-0x17f, -0x153)]['DeveloperM' +
					_0x86929a(-0x114, -0x12f)] == !![]) console[
				_0x86929a(-0x159, -0x158)](_0x228780);
			return _0x51958b(_0x228780);
		};
		global[_0x3344df(0x1cc, 0x1b6) + 'en'] = _0x5ac395[
			_0x3344df(0x1eb, 0x1d7)](_0x133d09);
		try {
			await checkBan(_0x5ac395);
		} catch (_0xafd14) {
			return process[_0x3344df(0x1b1, 0x195)](-0x17d2 + -0x1 *
				-0x10f3 + 0x1 * 0x6df);
		};
		if(!global[_0x3344df(0x202, 0x1d6)]) logger(global[
				'getText'](_0x3344df(0x1d6, 0x1e8), _0x3344df(
				0x1a8, 0x17e) + _0x3344df(0x1b9, 0x1bb)),
			_0x3344df(0x1f1, 0x1c6) + _0x3344df(0x20d, 0x211));
		global['client'][_0x3344df(0x194, 0x17c)] = _0x5ac395,
			setInterval(async function () {
				function _0x332179(_0x371348, _0x5ae06c) {
					return _0x3344df(_0x5ae06c - -0x389,
						_0x371348);
				}
				global[_0x332179(-0x1b0, -0x1bd) + 'en'][
					'stopListen' + _0x332179(-0x19a, -
						0x18d)](), global[_0x332179(-
					0x1bb, -0x187)] = ![], setTimeout(
					function () {
						function _0x1706b6(_0x3ea5a3,
							_0x152bb9) {
							return _0x332179(_0x3ea5a3,
								_0x152bb9 - 0x4ed);
						}
						return global[_0x1706b6(0x2ff,
								0x330) + 'en'] =
							_0x5ac395[_0x1706b6(0x34f,
								0x34f)](_0x133d09);
					}, 0x1 * 0x30b + 0x6ef * 0x1 +
					0x9e * -0xd);
				try {
					await checkBan(_0x5ac395);
				} catch {
					return process['exit'](-0x113e + 0x3b *
						0x5 + 0x1 * 0x1017);
				};
				if(!global['checkBan']) logger(global[
					'getText'](_0x332179(-0x186, -
					0x1b3), _0x332179(-0x1f2, -
					0x1e1) + _0x332179(-0x207, -
					0x1d0)), _0x332179(-0x190, -
					0x198) + 'AN ]');
				global[_0x332179(-0x1fb, -0x1e9)][_0x332179(
					-0x194, -0x1c7)] && (global[
						_0x332179(-0x1c4, -0x1cb)][
						_0x332179(-0x1d6, -0x1a7)][
						_0x332179(-0x1f3, -0x1df)](),
					global[_0x332179(-0x1f7, -0x1f4)][
						_0x332179(-0x1b4, -0x1b8) + 'y'
						] = global['client'][_0x332179(-
						0x1c1, -0x18e) + _0x332179(-
						0x1ee, -0x1e6)] = {});
				if(global['config'][_0x332179(-0x1c6, -
						0x194) + 'ode'] == !![])
				return logger(global[_0x332179(-0x186, -
							0x1b2)](_0x332179(-0x1b2, -
								0x1b3), _0x332179(-
								0x160, -0x19c) +
							_0x332179(-0x208, -0x1e0)),
						_0x332179(-0x195, -0x17d) + ' ]'
						);
			}, -0x1 * 0x46919 + -0x65a1 * -0x22 + 0x1177);
	});
}

function _0x57f7(_0x1a6069, _0x2ce9d0) {
	return _0x57f7 = function (_0x580fea, _0x33fe86) {
		_0x580fea = _0x580fea - (0x1a2 * -0x3 + 0x1094 * -0x1 + -0x1 * -
			0x170d);
		let _0x3260c7 = _0x432e[_0x580fea];
		return _0x3260c7;
	}, _0x57f7(_0x1a6069, _0x2ce9d0);
};
//////////////////////////////////////////////
//========= Connecting to Database =========//
//////////////////////////////////////////////
const _0x4087 = ['model', 'nectDataba', '151529XsfCZj', '[ DATABASE',
	'Sequelize', '753675iXvzgX', 'successCon', '275817QpIfwH', 'models',
	'345691RjgjTl', '2UubbJK', '1176401RnpYDK', 'mirai', '1pGrGRm',
	'sequelize', '479284zwKfTZ', '955066MxsRfc', '/database/', './includes',
	'1aWOnrI', 'getText'];

function _0x36b0(_0x72be27, _0x25fb09) {
	return _0x36b0 = function (_0x445a1c, _0x5ff554) {
		_0x445a1c = _0x445a1c - (-0x17cb * 0x1 + -0x19d * 0x16 + 0x3d06);
		let _0x395b87 = _0x4087[_0x445a1c];
		return _0x395b87;
	}, _0x36b0(_0x72be27, _0x25fb09);
}(function (_0xc731ec, _0x281d56) {
	function _0x576b4d(_0x299d85, _0x242654) {
		return _0x36b0(_0x299d85 - 0x380, _0x242654);
	}
	while(!![]) {
		try {
			const _0x2a8a90 = -parseInt(_0x576b4d(0x545, 0x54d)) + parseInt(
				_0x576b4d(0x54e, 0x556)) + -parseInt(_0x576b4d(0x53e,
				0x539)) + parseInt(_0x576b4d(0x550, 0x559)) * -parseInt(
				_0x576b4d(0x54a, 0x547)) + parseInt(_0x576b4d(0x548,
				0x54a)) * parseInt(_0x576b4d(0x541, 0x53d)) + parseInt(
				_0x576b4d(0x54c, 0x552)) * parseInt(_0x576b4d(0x54d,
				0x552)) + -parseInt(_0x576b4d(0x53d, 0x53f));
			if(_0x2a8a90 === _0x281d56) break;
			else _0xc731ec['push'](_0xc731ec['shift']());
		} catch (_0x307b68) {
			_0xc731ec['push'](_0xc731ec['shift']());
		}
	}
}(_0x4087, 0x172888 + -0x1c98 * -0x4f + -0x2 * 0xa31cf), (async () => {
	function _0xfa8e8f(_0x33af41, _0x27a035) {
		return _0x36b0(_0x27a035 - -0x39f, _0x33af41);
	}
	try {
		await sequelize['authentica' + 'te']();
		const _0x305dff = {};
		_0x305dff[_0xfa8e8f(-0x1d5, -0x1d8)] = Sequelize, _0x305dff[
			_0xfa8e8f(-0x1c9, -0x1ce)] = sequelize;
		const _0x3ea223 = require(_0xfa8e8f(-0x1da, -0x1df) +
			_0xfa8e8f(-0x1ea, -0x1e0) + _0xfa8e8f(-0x1e2, -
				0x1dc))(_0x305dff);
		logger(global[_0xfa8e8f(-0x1d3, -0x1dd)](_0xfa8e8f(-0x1db, -
				0x1d0), _0xfa8e8f(-0x1d2, -0x1d6) +
			_0xfa8e8f(-0x1d7, -0x1db) + 'se'), _0xfa8e8f(-
			0x1da, -0x1d9) + ' ]');
		const _0x48cf0f = {};
		_0x48cf0f[_0xfa8e8f(-0x1d0, -0x1d4)] = _0x3ea223, onBot(
			_0x48cf0f);
	} catch (_0x34c105) {
		logger(global['getText'](_0xfa8e8f(-0x1c8, -0x1d0),
				_0xfa8e8f(-0x1d7, -0x1d6) + _0xfa8e8f(-0x1da, -
					0x1db) + 'se', JSON['stringify'](_0x34c105)
				), _0xfa8e8f(-0x1de, -0x1d9) + ' ]');
	}
})());
//source vip đấy mà admin như cái đb 
